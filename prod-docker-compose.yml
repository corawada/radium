version: "3.7"

services:

  web-back:
    container_name: python-backend
    env_file: ./backend/web-back/web_back.env
    build:
      context: ./backend/web-back/.
      dockerfile: Dockerfile.prod
    volumes:
      - ./backend/web-back:/code/
      - static_volume:/code/staticfiles # <-- bind the static volume
    stdin_open: true
    tty: true
    command: gunicorn --bind :8000 config.wsgi:application
    networks:
      - backend_network
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DJANGO_SETTINGS_MODULE=config.local_settings
    depends_on:
      db:
        condition: service_healthy

  backend-server:
    container_name: nginx_back
    build:
      context: ./backend/nginx/.
      dockerfile: Dockerfile.dev
    volumes:
      - static_volume:/code/staticfiles # <-- bind the static volume
    ports:
      - "8080:80"
    depends_on:
      - web-back
    networks:
      - backend_network

  db:
    image: postgres:14
    ports:
      - "5432:5432"
    env_file: ./postgres/postgres.env
    volumes:
      - ./postgres_volume:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - backend_network
    healthcheck:
      test: pg_isready -U postgres -d radium
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend_network:
    driver: bridge
volumes:
  static_volume:

